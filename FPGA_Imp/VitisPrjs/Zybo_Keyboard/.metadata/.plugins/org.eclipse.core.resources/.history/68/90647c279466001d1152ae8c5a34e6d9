#include "PS2.hpp"

u32* PS2_Base = (u32*) PS2_Keyboard_Base;

void sleep(int n);

int main()
{
	/* Start Self Test */
	xil_printf("\n\rSELF TEST \n\r");
	/* Read the ID inside of the PS2 IP Block Register 4 */
	/* Should read out "PS2 " */
	for (int i = 0; i < 4; i++){
		xil_printf("%c",*(PS2_Base+3) >> (24-i*8));
	}

	std::cout << "ascii data: " <<PS2_ReadDataASCII(PS2_Keyboard_Base) << std::endl;
	xil_printf("u32 data: %d \n\r",PS2_ReadDataU32(PS2_Keyboard_Base));
	xil_printf("u32 break: %d \n\r",PS2_ReadBreak(PS2_Keyboard_Base));
	xil_printf("u32 time: %d \n\r",PS2_ReadTime(PS2_Keyboard_Base));
	std::cout << "float time: " << PS2_ReadTimeNormalized(PS2_Keyboard_Base,.0001) << std::endl;
	sleep(1);

	xil_printf("\n\rSELF TEST COMPLETE \n\r");


	// ID 61, Highest Priority, Rising Edge
	PS2_IntSetup(PS2_INT_INTERRUPT_ID,0x00,0x3);



	//xil_printf("%s \n\r",testID);
	//char ascii_data[8]; //7 bit buffer + \0
	//char break_data[2]; //1 bit buffer + \0
	//char timer_data[33]; //32 bit buffer + \0
	while(1){
		// Convert data to a buffer of 32 bits.
		//itoa(Xil_In32(PS2_Keyboard_Base)& PS2_Data_Mask,ascii_data,2);
		//sleep(1);
	}

    return 0;
}



void sleep(int n) {
	for(int j=0;j<n;j++){
		//Assuming 100MHz clock, delay for 1sec
		for(int i=0;i<(100000000);i++);
	}
}
